"""Init database

Revision ID: 39c8b80f1f1b
Revises: 
Create Date: 2025-07-09 06:07:16.594084

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = '39c8b80f1f1b'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('telegram_sessions',
    sa.Column('owner_id', sa.BigInteger(), nullable=False),
    sa.Column('dc_id', sa.BigInteger(), nullable=False),
    sa.Column('api_id', sa.BigInteger(), nullable=False),
    sa.Column('test_mode', sa.Boolean(), nullable=False),
    sa.Column('auth_key', sa.LargeBinary(), nullable=False),
    sa.Column('date', sa.BigInteger(), nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('is_bot', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('owner_id', 'dc_id'),
    sa.UniqueConstraint('owner_id')
    )
    op.create_table('telegram_version',
    sa.Column('number', sa.BigInteger(), nullable=False),
    sa.PrimaryKeyConstraint('number')
    )
    op.create_table('telegram_entities',
    sa.Column('owner_id', sa.BigInteger(), nullable=False),
    sa.Column('chat_id', sa.BigInteger(), nullable=False),
    sa.Column('chat_type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('username', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('small_pfp', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('total_messages', sa.Integer(), nullable=False),
    sa.Column('unread_count', sa.Integer(), nullable=False),
    sa.Column('last_message_date', sa.DateTime(), nullable=True),
    sa.Column('is_pinned', sa.Boolean(), nullable=False),
    sa.Column('members_count', sa.Integer(), nullable=False),
    sa.Column('is_creator', sa.Boolean(), nullable=False),
    sa.Column('is_admin', sa.Boolean(), nullable=False),
    sa.Column('rating', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['telegram_sessions.owner_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('owner_id', 'chat_id')
    )
    op.create_table('telegram_peers',
    sa.Column('owner_id', sa.BigInteger(), nullable=False),
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('access_hash', sa.BigInteger(), nullable=False),
    sa.Column('type', sa.String(), nullable=False),
    sa.Column('phone_number', sa.String(), nullable=True),
    sa.Column('last_update_on', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['telegram_sessions.owner_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('owner_id', 'id', name='telegram_peers_pkey')
    )
    op.create_index(op.f('ix_telegram_peers_id'), 'telegram_peers', ['id'], unique=False)
    op.create_index(op.f('ix_telegram_peers_phone_number'), 'telegram_peers', ['phone_number'], unique=False)
    op.create_table('telegram_update_state',
    sa.Column('owner_id', sa.BigInteger(), nullable=False),
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('pts', sa.BigInteger(), nullable=False),
    sa.Column('qts', sa.BigInteger(), nullable=False),
    sa.Column('date', sa.BigInteger(), nullable=False),
    sa.Column('seq', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['telegram_sessions.owner_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('owner_id', 'id')
    )
    op.create_table('user_onboarding',
    sa.Column('owner_id', sa.BigInteger(), nullable=False),
    sa.Column('is_onboarded', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['telegram_sessions.owner_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('owner_id'),
    sa.UniqueConstraint('owner_id')
    )
    op.create_table('telegram_chat_summaries',
    sa.Column('owner_id', sa.BigInteger(), nullable=False),
    sa.Column('chat_id', sa.BigInteger(), nullable=False),
    sa.Column('topics', sa.JSON(), nullable=True),
    sa.Column('is_read', sa.Boolean(), nullable=False),
    sa.Column('is_processed', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['owner_id', 'chat_id'], ['telegram_entities.owner_id', 'telegram_entities.chat_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('owner_id', 'chat_id')
    )
    op.create_table('telegram_messages',
    sa.Column('owner_id', sa.BigInteger(), nullable=False),
    sa.Column('chat_id', sa.BigInteger(), nullable=False),
    sa.Column('message_id', sa.BigInteger(), nullable=False),
    sa.Column('first_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('username', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('message', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['owner_id', 'chat_id'], ['telegram_entities.owner_id', 'telegram_entities.chat_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('owner_id', 'chat_id', 'message_id', name='pk_telegram_messages')
    )
    op.create_table('telegram_usernames',
    sa.Column('owner_id', sa.BigInteger(), nullable=False),
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['owner_id', 'id'], ['telegram_peers.owner_id', 'telegram_peers.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['owner_id'], ['telegram_sessions.owner_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('owner_id', 'id', name='telegram_usernames_pkey')
    )
    op.create_index(op.f('ix_telegram_usernames_id'), 'telegram_usernames', ['id'], unique=False)
    op.create_index(op.f('ix_telegram_usernames_username'), 'telegram_usernames', ['username'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_telegram_usernames_username'), table_name='telegram_usernames')
    op.drop_index(op.f('ix_telegram_usernames_id'), table_name='telegram_usernames')
    op.drop_table('telegram_usernames')
    op.drop_table('telegram_messages')
    op.drop_table('telegram_chat_summaries')
    op.drop_table('user_onboarding')
    op.drop_table('telegram_update_state')
    op.drop_index(op.f('ix_telegram_peers_phone_number'), table_name='telegram_peers')
    op.drop_index(op.f('ix_telegram_peers_id'), table_name='telegram_peers')
    op.drop_table('telegram_peers')
    op.drop_table('telegram_entities')
    op.drop_table('telegram_version')
    op.drop_table('telegram_sessions')
    # ### end Alembic commands ###
